package xyz.costamiri.hollowwoods.registry.block;

import net.minecraft.util.Identifier;
import xyz.costamiri.hollowwoods.blocks.HollowLog;

public class Byg extends HollowBlocks {
    public static final HollowLog HOLLOW_ASPEN_LOG = new HollowLog();
    public static final HollowLog HOLLOW_BAOBAB_LOG = new HollowLog();
    public static final HollowLog HOLLOW_BLUE_ENCHANTED_LOG = new HollowLog();
    public static final HollowLog HOLLOW_BULBIS_STEM = new HollowLog();
    public static final HollowLog HOLLOW_CHERRY_LOG = new HollowLog();
    public static final HollowLog HOLLOW_CIKA_LOG = new HollowLog();
    public static final HollowLog HOLLOW_CYPRESS_LOG = new HollowLog();
    public static final HollowLog HOLLOW_EBONY_LOG = new HollowLog();
    public static final HollowLog HOLLOW_EMBUR_LOG = new HollowLog();
    public static final HollowLog HOLLOW_ETHER_LOG = new HollowLog();
    public static final HollowLog HOLLOW_FIR_LOG = new HollowLog();
    public static final HollowLog HOLLOW_GREEN_ENCHANTED_LOG = new HollowLog();
    public static final HollowLog HOLLOW_HOLLY_LOG = new HollowLog();
    public static final HollowLog HOLLOW_IMPARIUS_STEM = new HollowLog();
    public static final HollowLog HOLLOW_FUNGAL_IMPARIUS_STEM = new HollowLog();
    public static final HollowLog HOLLOW_JACARANDA_LOG = new HollowLog();
    public static final HollowLog HOLLOW_LAMENT_LOG = new HollowLog();
    public static final HollowLog HOLLOW_MAHOGANY_LOG = new HollowLog();
    public static final HollowLog HOLLOW_MAPLE_LOG = new HollowLog();
    public static final HollowLog HOLLOW_NIGHTSHADE_LOG = new HollowLog();
    public static final HollowLog HOLLOW_PALM_LOG = new HollowLog();
    public static final HollowLog HOLLOW_PALO_VERDE_LOG = new HollowLog();
    public static final HollowLog HOLLOW_PINE_LOG = new HollowLog();
    public static final HollowLog HOLLOW_RAINBOW_EUCALYPTUS_LOG = new HollowLog();
    public static final HollowLog HOLLOW_REDWOOD_LOG = new HollowLog();
    public static final HollowLog HOLLOW_SKYRIS_LOG = new HollowLog();
    public static final HollowLog HOLLOW_SYTHIAN_STEM = new HollowLog();
    public static final HollowLog HOLLOW_WHITE_MANGROVE_LOG = new HollowLog();
    public static final HollowLog HOLLOW_WILLOW_LOG = new HollowLog();
    public static final HollowLog HOLLOW_WITCH_HAZEL_LOG = new HollowLog();
    public static final HollowLog HOLLOW_WITHERING_OAK_LOG = new HollowLog();
    public static final HollowLog HOLLOW_ZELKOVA_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_ASPEN_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_BAOBAB_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_BLUE_ENCHANTED_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_BULBIS_STEM = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_CHERRY_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_CIKA_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_CYPRESS_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_EBONY_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_EMBUR_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_ETHER_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_FIR_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_GREEN_ENCHANTED_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_HOLLY_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_JACARANDA_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_LAMENT_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_MAHOGANY_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_MAPLE_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_NIGHTSHADE_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_PALM_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_PALO_VERDE_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_PINE_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_RAINBOW_EUCALYPTUS_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_REDWOOD_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_SKYRIS_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_SYTHIAN_STEM = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_WHITE_MANGROVE_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_WILLOW_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_WITCH_HAZEL_LOG = new HollowLog();
    public static final HollowLog STRIPPED_HOLLOW_ZELKOVA_LOG = new HollowLog();

    public Byg() {
        this.namespace = "byg";
    }

    @Override
    public void registerBlocks() {
        _registerLog(HOLLOW_ASPEN_LOG, "hollow_aspen_log");
        _registerLog(HOLLOW_BAOBAB_LOG, "hollow_baobab_log");
        _registerLog(HOLLOW_BLUE_ENCHANTED_LOG, "hollow_blue_enchanted_log");
        _registerLog(HOLLOW_BULBIS_STEM, "hollow_bulbis_stem");
        _registerLog(HOLLOW_CHERRY_LOG, "hollow_cherry_log");
        _registerLog(HOLLOW_CIKA_LOG, "hollow_cika_log");
        _registerLog(HOLLOW_CYPRESS_LOG, "hollow_cypress_log");
        _registerLog(HOLLOW_EBONY_LOG, "hollow_ebony_log");
        _registerLog(HOLLOW_EMBUR_LOG, "hollow_embur_log");
        _registerLog(HOLLOW_ETHER_LOG, "hollow_ether_log");
        _registerLog(HOLLOW_FIR_LOG, "hollow_fir_log");
        _registerLog(HOLLOW_GREEN_ENCHANTED_LOG, "hollow_green_enchanted_log");
        _registerLog(HOLLOW_HOLLY_LOG, "hollow_holly_log");
        _registerLog(HOLLOW_IMPARIUS_STEM, "hollow_imparius_stem");
        _registerLog(HOLLOW_FUNGAL_IMPARIUS_STEM, "hollow_fungal_imparius_stem");
        _registerLog(HOLLOW_JACARANDA_LOG, "hollow_jacaranda_log");
        _registerLog(HOLLOW_LAMENT_LOG, "hollow_lament_log", false);
        _registerLog(HOLLOW_MAHOGANY_LOG, "hollow_mahogany_log");
        _registerLog(HOLLOW_MAPLE_LOG, "hollow_maple_log");
        _registerLog(HOLLOW_NIGHTSHADE_LOG, "hollow_nightshade_log");
        _registerLog(HOLLOW_PALM_LOG, "hollow_palm_log");
        _registerLog(HOLLOW_PALO_VERDE_LOG, "hollow_palo_verde_log");
        _registerLog(HOLLOW_PINE_LOG, "hollow_pine_log");
        _registerLog(HOLLOW_RAINBOW_EUCALYPTUS_LOG, "hollow_rainbow_eucalyptus_log");
        _registerLog(HOLLOW_REDWOOD_LOG, "hollow_redwood_log");
        _registerLog(HOLLOW_SKYRIS_LOG, "hollow_skyris_log");
        _registerLog(HOLLOW_SYTHIAN_STEM, "hollow_sythian_stem");
        _registerLog(HOLLOW_WHITE_MANGROVE_LOG, "hollow_white_mangrove_log");
        _registerLog(HOLLOW_WILLOW_LOG, "hollow_willow_log");
        _registerLog(HOLLOW_WITCH_HAZEL_LOG, "hollow_witch_hazel_log");
        _registerLog(HOLLOW_WITHERING_OAK_LOG, "hollow_withering_oak_log");
        _registerLog(HOLLOW_ZELKOVA_LOG, "hollow_zelkova_log");
        _registerLog(STRIPPED_HOLLOW_ASPEN_LOG, "stripped_hollow_aspen_log");
        _registerLog(STRIPPED_HOLLOW_BAOBAB_LOG, "stripped_hollow_baobab_log");
        _registerLog(STRIPPED_HOLLOW_BLUE_ENCHANTED_LOG, "stripped_hollow_blue_enchanted_log");
        _registerLog(STRIPPED_HOLLOW_BULBIS_STEM, "stripped_hollow_bulbis_stem");
        _registerLog(STRIPPED_HOLLOW_CHERRY_LOG, "stripped_hollow_cherry_log");
        _registerLog(STRIPPED_HOLLOW_CIKA_LOG, "stripped_hollow_cika_log");
        _registerLog(STRIPPED_HOLLOW_CYPRESS_LOG, "stripped_hollow_cypress_log");
        _registerLog(STRIPPED_HOLLOW_EBONY_LOG, "stripped_hollow_ebony_log");
        _registerLog(STRIPPED_HOLLOW_EMBUR_LOG, "stripped_hollow_embur_log");
        _registerLog(STRIPPED_HOLLOW_ETHER_LOG, "stripped_hollow_ether_log");
        _registerLog(STRIPPED_HOLLOW_FIR_LOG, "stripped_hollow_fir_log");
        _registerLog(STRIPPED_HOLLOW_GREEN_ENCHANTED_LOG, "stripped_hollow_green_enchanted_log");
        _registerLog(STRIPPED_HOLLOW_HOLLY_LOG, "stripped_hollow_holly_log");
        _registerLog(STRIPPED_HOLLOW_JACARANDA_LOG, "stripped_hollow_jacaranda_log");
        _registerLog(STRIPPED_HOLLOW_LAMENT_LOG, "stripped_hollow_lament_log", false);
        _registerLog(STRIPPED_HOLLOW_MAHOGANY_LOG, "stripped_hollow_mahogany_log");
        _registerLog(STRIPPED_HOLLOW_MAPLE_LOG, "stripped_hollow_maple_log");
        _registerLog(STRIPPED_HOLLOW_NIGHTSHADE_LOG, "stripped_hollow_nightshade_log");
        _registerLog(STRIPPED_HOLLOW_PALM_LOG, "stripped_hollow_palm_log");
        _registerLog(STRIPPED_HOLLOW_PALO_VERDE_LOG, "stripped_hollow_palo_verde_log");
        _registerLog(STRIPPED_HOLLOW_PINE_LOG, "stripped_hollow_pine_log");
        _registerLog(STRIPPED_HOLLOW_RAINBOW_EUCALYPTUS_LOG, "stripped_hollow_rainbow_eucalyptus_log");
        _registerLog(STRIPPED_HOLLOW_REDWOOD_LOG, "stripped_hollow_redwood_log");
        _registerLog(STRIPPED_HOLLOW_SKYRIS_LOG, "stripped_hollow_skyris_log");
        _registerLog(STRIPPED_HOLLOW_SYTHIAN_STEM, "stripped_hollow_sythian_stem");
        _registerLog(STRIPPED_HOLLOW_WHITE_MANGROVE_LOG, "stripped_hollow_white_mangrove_log");
        _registerLog(STRIPPED_HOLLOW_WILLOW_LOG, "stripped_hollow_willow_log");
        _registerLog(STRIPPED_HOLLOW_WITCH_HAZEL_LOG, "stripped_hollow_witch_hazel_log");
        _registerLog(STRIPPED_HOLLOW_ZELKOVA_LOG, "stripped_hollow_zelkova_log");
    }

    @Override
    public void addBlocksStripping() {
        strippedBlocks.put(HOLLOW_ASPEN_LOG, STRIPPED_HOLLOW_ASPEN_LOG);
        strippedBlocks.put(HOLLOW_BAOBAB_LOG, STRIPPED_HOLLOW_BAOBAB_LOG);
        strippedBlocks.put(HOLLOW_BLUE_ENCHANTED_LOG, STRIPPED_HOLLOW_BLUE_ENCHANTED_LOG);
        strippedBlocks.put(HOLLOW_BULBIS_STEM, STRIPPED_HOLLOW_BULBIS_STEM);
        strippedBlocks.put(HOLLOW_CHERRY_LOG, STRIPPED_HOLLOW_CHERRY_LOG);
        strippedBlocks.put(HOLLOW_CIKA_LOG, STRIPPED_HOLLOW_CIKA_LOG);
        strippedBlocks.put(HOLLOW_CYPRESS_LOG, STRIPPED_HOLLOW_CYPRESS_LOG);
        strippedBlocks.put(HOLLOW_EBONY_LOG, STRIPPED_HOLLOW_EBONY_LOG);
        strippedBlocks.put(HOLLOW_EMBUR_LOG, STRIPPED_HOLLOW_EMBUR_LOG);
        strippedBlocks.put(HOLLOW_ETHER_LOG, STRIPPED_HOLLOW_ETHER_LOG);
        strippedBlocks.put(HOLLOW_FIR_LOG, STRIPPED_HOLLOW_FIR_LOG);
        strippedBlocks.put(HOLLOW_GREEN_ENCHANTED_LOG, STRIPPED_HOLLOW_GREEN_ENCHANTED_LOG);
        strippedBlocks.put(HOLLOW_HOLLY_LOG, STRIPPED_HOLLOW_HOLLY_LOG);
        strippedBlocks.put(HOLLOW_FUNGAL_IMPARIUS_STEM, HOLLOW_IMPARIUS_STEM);
        strippedBlocks.put(HOLLOW_JACARANDA_LOG, STRIPPED_HOLLOW_JACARANDA_LOG);
        strippedBlocks.put(HOLLOW_LAMENT_LOG, STRIPPED_HOLLOW_LAMENT_LOG);
        strippedBlocks.put(HOLLOW_MAHOGANY_LOG, STRIPPED_HOLLOW_MAHOGANY_LOG);
        strippedBlocks.put(HOLLOW_MAPLE_LOG, STRIPPED_HOLLOW_MAPLE_LOG);
        strippedBlocks.put(HOLLOW_NIGHTSHADE_LOG, STRIPPED_HOLLOW_NIGHTSHADE_LOG);
        strippedBlocks.put(HOLLOW_PALM_LOG, STRIPPED_HOLLOW_PALM_LOG);
        strippedBlocks.put(HOLLOW_PALO_VERDE_LOG, STRIPPED_HOLLOW_PALO_VERDE_LOG);
        strippedBlocks.put(HOLLOW_PINE_LOG, STRIPPED_HOLLOW_PINE_LOG);
        strippedBlocks.put(HOLLOW_RAINBOW_EUCALYPTUS_LOG, STRIPPED_HOLLOW_RAINBOW_EUCALYPTUS_LOG);
        strippedBlocks.put(HOLLOW_REDWOOD_LOG, STRIPPED_HOLLOW_REDWOOD_LOG);
        strippedBlocks.put(HOLLOW_SKYRIS_LOG, STRIPPED_HOLLOW_SKYRIS_LOG);
        strippedBlocks.put(HOLLOW_SYTHIAN_STEM, STRIPPED_HOLLOW_SYTHIAN_STEM);
        strippedBlocks.put(HOLLOW_WHITE_MANGROVE_LOG, STRIPPED_HOLLOW_WHITE_MANGROVE_LOG);
        strippedBlocks.put(HOLLOW_WILLOW_LOG, STRIPPED_HOLLOW_WILLOW_LOG);
        strippedBlocks.put(HOLLOW_WITCH_HAZEL_LOG, STRIPPED_HOLLOW_WITCH_HAZEL_LOG);
        strippedBlocks.put(HOLLOW_WITHERING_OAK_LOG, VanillaMinecraftBlocks.STRIPPED_HOLLOW_OAK_LOG);
        strippedBlocks.put(HOLLOW_ZELKOVA_LOG, STRIPPED_HOLLOW_ZELKOVA_LOG);
    }

    @Override
    public void addBlocksHollowing() {
        hollowedBlocks.put(new Identifier(namespace, "aspen_log"), HOLLOW_ASPEN_LOG);
        hollowedBlocks.put(new Identifier(namespace, "baobab_log"), HOLLOW_BAOBAB_LOG);
        hollowedBlocks.put(new Identifier(namespace, "blue_enchanted_log"), HOLLOW_BLUE_ENCHANTED_LOG);
        hollowedBlocks.put(new Identifier(namespace, "bulbis_stem"), HOLLOW_BULBIS_STEM);
        hollowedBlocks.put(new Identifier(namespace, "cherry_log"), HOLLOW_CHERRY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "cika_log"), HOLLOW_CIKA_LOG);
        hollowedBlocks.put(new Identifier(namespace, "cypress_log"), HOLLOW_CYPRESS_LOG);
        hollowedBlocks.put(new Identifier(namespace, "ebony_log"), HOLLOW_EBONY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "embur_log"), HOLLOW_EMBUR_LOG);
        hollowedBlocks.put(new Identifier(namespace, "ether_log"), HOLLOW_ETHER_LOG);
        hollowedBlocks.put(new Identifier(namespace, "fir_log"), HOLLOW_FIR_LOG);
        hollowedBlocks.put(new Identifier(namespace, "green_enchanted_log"), HOLLOW_GREEN_ENCHANTED_LOG);
        hollowedBlocks.put(new Identifier(namespace, "holly_log"), HOLLOW_HOLLY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "imparius_stem"), HOLLOW_IMPARIUS_STEM);
        hollowedBlocks.put(new Identifier(namespace, "fungal_imparius_stem"), HOLLOW_FUNGAL_IMPARIUS_STEM);
        hollowedBlocks.put(new Identifier(namespace, "jacaranda_log"), HOLLOW_JACARANDA_LOG);
        hollowedBlocks.put(new Identifier(namespace, "lament_log"), HOLLOW_LAMENT_LOG);
        hollowedBlocks.put(new Identifier(namespace, "mahogany_log"), HOLLOW_MAHOGANY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "maple_log"), HOLLOW_MAPLE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "nightshade_log"), HOLLOW_NIGHTSHADE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "palm_log"), HOLLOW_PALM_LOG);
        hollowedBlocks.put(new Identifier(namespace, "palo_verde_log"), HOLLOW_PALO_VERDE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "pine_log"), HOLLOW_PINE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "rainbow_eucalyptus_log"), HOLLOW_RAINBOW_EUCALYPTUS_LOG);
        hollowedBlocks.put(new Identifier(namespace, "redwood_log"), HOLLOW_REDWOOD_LOG);
        hollowedBlocks.put(new Identifier(namespace, "skyris_log"), HOLLOW_SKYRIS_LOG);
        hollowedBlocks.put(new Identifier(namespace, "sythian_stem"), HOLLOW_SYTHIAN_STEM);
        hollowedBlocks.put(new Identifier(namespace, "white_mangrove_log"), HOLLOW_WHITE_MANGROVE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "willow_log"), HOLLOW_WILLOW_LOG);
        hollowedBlocks.put(new Identifier(namespace, "witch_hazel_log"), HOLLOW_WITCH_HAZEL_LOG);
        hollowedBlocks.put(new Identifier(namespace, "withering_oak_log"), HOLLOW_WITHERING_OAK_LOG);
        hollowedBlocks.put(new Identifier(namespace, "zelkova_log"), HOLLOW_ZELKOVA_LOG);

        hollowedBlocks.put(new Identifier(namespace, "stripped_aspen_log"), STRIPPED_HOLLOW_ASPEN_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_baobab_log"), STRIPPED_HOLLOW_BAOBAB_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_blue_enchanted_log"), STRIPPED_HOLLOW_BLUE_ENCHANTED_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_bulbis_stem"), STRIPPED_HOLLOW_BULBIS_STEM);
        hollowedBlocks.put(new Identifier(namespace, "stripped_cherry_log"), STRIPPED_HOLLOW_CHERRY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_cika_log"), STRIPPED_HOLLOW_CIKA_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_cypress_log"), STRIPPED_HOLLOW_CYPRESS_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_ebony_log"), STRIPPED_HOLLOW_EBONY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_embur_log"), STRIPPED_HOLLOW_EMBUR_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_ether_log"), STRIPPED_HOLLOW_ETHER_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_fir_log"), STRIPPED_HOLLOW_FIR_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_green_enchanted_log"), STRIPPED_HOLLOW_GREEN_ENCHANTED_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_holly_log"), STRIPPED_HOLLOW_HOLLY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_jacaranda_log"), STRIPPED_HOLLOW_JACARANDA_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_lament_log"), STRIPPED_HOLLOW_LAMENT_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_mahogany_log"), STRIPPED_HOLLOW_MAHOGANY_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_maple_log"), STRIPPED_HOLLOW_MAPLE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_nightshade_log"), STRIPPED_HOLLOW_NIGHTSHADE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_palm_log"), STRIPPED_HOLLOW_PALM_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_palo_verde_log"), STRIPPED_HOLLOW_PALO_VERDE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_pine_log"), STRIPPED_HOLLOW_PINE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_rainbow_eucalyptus_log"), STRIPPED_HOLLOW_RAINBOW_EUCALYPTUS_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_redwood_log"), STRIPPED_HOLLOW_REDWOOD_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_skyris_log"), STRIPPED_HOLLOW_SKYRIS_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_sythian_stem"), STRIPPED_HOLLOW_SYTHIAN_STEM);
        hollowedBlocks.put(new Identifier(namespace, "stripped_white_mangrove_log"), STRIPPED_HOLLOW_WHITE_MANGROVE_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_willow_log"), STRIPPED_HOLLOW_WILLOW_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_witch_hazel_log"), STRIPPED_HOLLOW_WITCH_HAZEL_LOG);
        hollowedBlocks.put(new Identifier(namespace, "stripped_zelkova_log"), STRIPPED_HOLLOW_ZELKOVA_LOG);
    }

    @Override
    public void addPlanksConversion() {
        planksConversion.put(HOLLOW_ASPEN_LOG, new Identifier(namespace, "aspen_planks"));
        planksConversion.put(HOLLOW_BAOBAB_LOG, new Identifier(namespace, "baobab_planks"));
        planksConversion.put(HOLLOW_BLUE_ENCHANTED_LOG, new Identifier(namespace, "blue_enchanted_planks"));
        planksConversion.put(HOLLOW_BULBIS_STEM, new Identifier(namespace, "bulbis_planks"));
        planksConversion.put(HOLLOW_CHERRY_LOG, new Identifier(namespace, "cherry_planks"));
        planksConversion.put(HOLLOW_CIKA_LOG, new Identifier(namespace, "cika_planks"));
        planksConversion.put(HOLLOW_CYPRESS_LOG, new Identifier(namespace, "cypress_planks"));
        planksConversion.put(HOLLOW_EBONY_LOG, new Identifier(namespace, "ebony_planks"));
        planksConversion.put(HOLLOW_EMBUR_LOG, new Identifier(namespace, "embur_planks"));
        planksConversion.put(HOLLOW_ETHER_LOG, new Identifier(namespace, "ether_planks"));
        planksConversion.put(HOLLOW_FIR_LOG, new Identifier(namespace, "fir_planks"));
        planksConversion.put(HOLLOW_GREEN_ENCHANTED_LOG, new Identifier(namespace, "green_enchanted_planks"));
        planksConversion.put(HOLLOW_HOLLY_LOG, new Identifier(namespace, "holly_planks"));
        planksConversion.put(HOLLOW_IMPARIUS_STEM, new Identifier(namespace, "imparius_planks"));
        planksConversion.put(HOLLOW_JACARANDA_LOG, new Identifier(namespace, "jacaranda_planks"));
        planksConversion.put(HOLLOW_LAMENT_LOG, new Identifier(namespace, "lament_planks"));
        planksConversion.put(HOLLOW_MAHOGANY_LOG, new Identifier(namespace, "mahogany_planks"));
        planksConversion.put(HOLLOW_MAPLE_LOG, new Identifier(namespace, "maple_planks"));
        planksConversion.put(HOLLOW_NIGHTSHADE_LOG, new Identifier(namespace, "nightshade_planks"));
        planksConversion.put(HOLLOW_PALM_LOG, new Identifier(namespace, "palm_planks"));
        planksConversion.put(HOLLOW_PALO_VERDE_LOG, new Identifier("minecraft", "birch_planks"));
        planksConversion.put(HOLLOW_PINE_LOG, new Identifier(namespace, "pine_planks"));
        planksConversion.put(HOLLOW_RAINBOW_EUCALYPTUS_LOG, new Identifier(namespace, "rainbow_eucalyptus_planks"));
        planksConversion.put(HOLLOW_REDWOOD_LOG, new Identifier(namespace, "redwood_planks"));
        planksConversion.put(HOLLOW_SKYRIS_LOG, new Identifier(namespace, "skyris_planks"));
        planksConversion.put(HOLLOW_SYTHIAN_STEM, new Identifier(namespace, "sythian_planks"));
        planksConversion.put(HOLLOW_WHITE_MANGROVE_LOG, new Identifier(namespace, "white_mangrove_planks"));
        planksConversion.put(HOLLOW_WILLOW_LOG, new Identifier(namespace, "willow_planks"));
        planksConversion.put(HOLLOW_WITCH_HAZEL_LOG, new Identifier(namespace, "witch_hazel_planks"));
        planksConversion.put(HOLLOW_WITHERING_OAK_LOG, new Identifier("minecraft", "oak_planks"));
        planksConversion.put(HOLLOW_ZELKOVA_LOG, new Identifier(namespace, "zelkova_planks"));
        planksConversion.put(STRIPPED_HOLLOW_ASPEN_LOG, new Identifier(namespace, "aspen_planks"));
        planksConversion.put(STRIPPED_HOLLOW_BAOBAB_LOG, new Identifier(namespace, "baobab_planks"));
        planksConversion.put(STRIPPED_HOLLOW_BLUE_ENCHANTED_LOG, new Identifier(namespace, "blue_enchanted_planks"));
        planksConversion.put(STRIPPED_HOLLOW_BULBIS_STEM, new Identifier(namespace, "bulbis_planks"));
        planksConversion.put(STRIPPED_HOLLOW_CHERRY_LOG, new Identifier(namespace, "cherry_planks"));
        planksConversion.put(STRIPPED_HOLLOW_CIKA_LOG, new Identifier(namespace, "cika_planks"));
        planksConversion.put(STRIPPED_HOLLOW_CYPRESS_LOG, new Identifier(namespace, "cypress_planks"));
        planksConversion.put(STRIPPED_HOLLOW_EBONY_LOG, new Identifier(namespace, "ebony_planks"));
        planksConversion.put(STRIPPED_HOLLOW_EMBUR_LOG, new Identifier(namespace, "embur_planks"));
        planksConversion.put(STRIPPED_HOLLOW_ETHER_LOG, new Identifier(namespace, "ether_planks"));
        planksConversion.put(STRIPPED_HOLLOW_FIR_LOG, new Identifier(namespace, "fir_planks"));
        planksConversion.put(STRIPPED_HOLLOW_GREEN_ENCHANTED_LOG, new Identifier(namespace, "green_enchanted_planks"));
        planksConversion.put(STRIPPED_HOLLOW_HOLLY_LOG, new Identifier(namespace, "holly_planks"));
        planksConversion.put(HOLLOW_FUNGAL_IMPARIUS_STEM, new Identifier(namespace, "imparius_planks"));
        planksConversion.put(STRIPPED_HOLLOW_JACARANDA_LOG, new Identifier(namespace, "jacaranda_planks"));
        planksConversion.put(STRIPPED_HOLLOW_LAMENT_LOG, new Identifier(namespace, "lament_planks"));
        planksConversion.put(STRIPPED_HOLLOW_MAHOGANY_LOG, new Identifier(namespace, "mahogany_planks"));
        planksConversion.put(STRIPPED_HOLLOW_MAPLE_LOG, new Identifier(namespace, "maple_planks"));
        planksConversion.put(STRIPPED_HOLLOW_NIGHTSHADE_LOG, new Identifier(namespace, "nightshade_planks"));
        planksConversion.put(STRIPPED_HOLLOW_PALM_LOG, new Identifier(namespace, "palm_planks"));
        planksConversion.put(STRIPPED_HOLLOW_PALO_VERDE_LOG, new Identifier("minecraft", "birch_planks"));
        planksConversion.put(STRIPPED_HOLLOW_PINE_LOG, new Identifier(namespace, "pine_planks"));
        planksConversion.put(STRIPPED_HOLLOW_RAINBOW_EUCALYPTUS_LOG, new Identifier(namespace, "rainbow_eucalyptus_planks"));
        planksConversion.put(STRIPPED_HOLLOW_REDWOOD_LOG, new Identifier(namespace, "redwood_planks"));
        planksConversion.put(STRIPPED_HOLLOW_SKYRIS_LOG, new Identifier(namespace, "skyris_planks"));
        planksConversion.put(STRIPPED_HOLLOW_SYTHIAN_STEM, new Identifier(namespace, "sythian_planks"));
        planksConversion.put(STRIPPED_HOLLOW_WHITE_MANGROVE_LOG, new Identifier(namespace, "white_mangrove_planks"));
        planksConversion.put(STRIPPED_HOLLOW_WILLOW_LOG, new Identifier(namespace, "willow_planks"));
        planksConversion.put(STRIPPED_HOLLOW_WITCH_HAZEL_LOG, new Identifier(namespace, "witch_hazel_planks"));
        planksConversion.put(STRIPPED_HOLLOW_ZELKOVA_LOG, new Identifier(namespace, "zelkova_planks"));
    }
}
